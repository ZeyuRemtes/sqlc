{{define "interfaceCodeStd"}}
    type DBTX interface {
    	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
    	PrepareContext(context.Context, string) (*sql.Stmt, error)
    	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
    	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
    }

    type DAL interface {
            io.Closer
    {{- $dbtxParam := .EmitMethodsWithDBArgument -}}
    {{- range .GoQueries}}
        {{- if and (eq .Cmd ":one") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) ({{.Ret.DefineType}}, error)
        {{- else if eq .Cmd ":one"}}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) ({{.Ret.DefineType}}, error)
        {{- end}}
        {{- if and (eq .Cmd ":many") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) ([]{{.Ret.DefineType}}, error)
        {{- else if eq .Cmd ":many"}}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) ([]{{.Ret.DefineType}}, error)
        {{- end}}
        {{- if and (eq .Cmd ":exec") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) error
        {{- else if eq .Cmd ":exec"}}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) error
        {{- end}}
        {{- if and (eq .Cmd ":execrows") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) (int64, error)
        {{- else if eq .Cmd ":execrows"}}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) (int64, error)
        {{- end}}
        {{- if and (eq .Cmd ":execlastid") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) (int64, error)
        {{- else if eq .Cmd ":execlastid"}}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) (int64, error)
        {{- end}}
        {{- if and (eq .Cmd ":execresult") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) (sql.Result, error)
        {{- else if eq .Cmd ":execresult"}}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) (sql.Result, error)
        {{- end}}
    {{- end}}
    }

    {{- range .GoQueries}}
    {{if .Arg.EmitStruct}}
    type {{.Arg.Type}} struct { {{- range .Arg.UniqueFields}}
      {{.Name}} {{.Type}} {{if .Tag}}{{$.Q}}{{.Tag}}{{$.Q}}{{end}}
      {{- end}}
    }
    {{end}}

    {{if .Ret.EmitStruct}}
    type {{.Ret.Type}} struct { {{- range .Ret.Struct.Fields}}
      {{.Name}} {{.Type}} {{if .Tag}}{{$.Q}}{{.Tag}}{{$.Q}}{{end}}
      {{- end}}
    }
    {{end}}
    {{- end}}

{{end}}
